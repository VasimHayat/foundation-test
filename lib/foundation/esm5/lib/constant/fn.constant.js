/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Created by mvasim on 12/9/17.
 */
import { FnWeatherConstatnt } from './fn-weather.constant';
import { FnDeviceConstant } from './fn-device.constant';
import { FnDateFormatConstant } from './fn-date-format.constant';
var FNConstant = /** @class */ (function () {
    function FNConstant() {
    }
    FNConstant.SPACE = '';
    FNConstant.SING_SPACE = ' ';
    FNConstant.EMPTYSTR = '';
    FNConstant.TILDE = '~';
    FNConstant.FWD_SLASH = '/';
    FNConstant.COMMA = ',';
    FNConstant.HYPHEN = '-';
    FNConstant.UNDERSCORE = '_';
    FNConstant.DOT = '\\.';
    FNConstant.PERC = '%';
    FNConstant.NO = 'NO';
    FNConstant.NULL_LC = 'null';
    FNConstant.UN_DEFINED = 'undefined';
    FNConstant.FALSE_LC = 'false';
    FNConstant.NULL = null;
    FNConstant.WEATHER_ICON_HASH = FnWeatherConstatnt.WEATHER_ICONS;
    FNConstant.WEATHER_STRINGS = FnWeatherConstatnt.WEATHER_STRINGS;
    FNConstant.FNDEVICE_ICONS_HASH = FnDeviceConstant;
    // public static readonly FNINDEX_CONSTANT = FNIndexConstant;
    FNConstant.FNDATE_FORMAT_MAP = FnDateFormatConstant.DATE_FORMAT_MAP;
    FNConstant.FNTIME_FORMAT_MAP = FnDateFormatConstant.TIME_FORMAT_MAP;
    FNConstant.NG_DATE_FORMAT_MAP = FnDateFormatConstant.NG_DATE_FORMAT_MAP;
    FNConstant.NG_TIME_FORMAT_MAP = FnDateFormatConstant.NG_TIME_FORMAT_MAP;
    return FNConstant;
}());
export { FNConstant };
if (false) {
    /** @type {?} */
    FNConstant.SPACE;
    /** @type {?} */
    FNConstant.SING_SPACE;
    /** @type {?} */
    FNConstant.EMPTYSTR;
    /** @type {?} */
    FNConstant.TILDE;
    /** @type {?} */
    FNConstant.FWD_SLASH;
    /** @type {?} */
    FNConstant.COMMA;
    /** @type {?} */
    FNConstant.HYPHEN;
    /** @type {?} */
    FNConstant.UNDERSCORE;
    /** @type {?} */
    FNConstant.DOT;
    /** @type {?} */
    FNConstant.PERC;
    /** @type {?} */
    FNConstant.NO;
    /** @type {?} */
    FNConstant.NULL_LC;
    /** @type {?} */
    FNConstant.UN_DEFINED;
    /** @type {?} */
    FNConstant.FALSE_LC;
    /** @type {?} */
    FNConstant.NULL;
    /** @type {?} */
    FNConstant.WEATHER_ICON_HASH;
    /** @type {?} */
    FNConstant.WEATHER_STRINGS;
    /** @type {?} */
    FNConstant.FNDEVICE_ICONS_HASH;
    /** @type {?} */
    FNConstant.FNDATE_FORMAT_MAP;
    /** @type {?} */
    FNConstant.FNTIME_FORMAT_MAP;
    /** @type {?} */
    FNConstant.NG_DATE_FORMAT_MAP;
    /** @type {?} */
    FNConstant.NG_TIME_FORMAT_MAP;
}
/** @type {?} */
export var FULL_NAME_REGX = /^(?:[A-Za-z]+(?:\s+|$)){1,}$/;
/** @type {?} */
export var NAME_REGEX = /^[A-Za-z\s]*$/;
/** @type {?} */
export var CURRENCY_REGEX = /(\d)(?=(\d{3})+\.)/g;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm4uY29uc3RhbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9mb3VuZGF0aW9uLyIsInNvdXJjZXMiOlsibGliL2NvbnN0YW50L2ZuLmNvbnN0YW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFJQSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUdqRTtJQUFBO0lBNEJBLENBQUM7SUExQjBCLGdCQUFLLEdBQVcsRUFBRSxDQUFDO0lBQ25CLHFCQUFVLEdBQVcsR0FBRyxDQUFDO0lBQ3pCLG1CQUFRLEdBQVcsRUFBRSxDQUFDO0lBQ3RCLGdCQUFLLEdBQVcsR0FBRyxDQUFDO0lBQ3BCLG9CQUFTLEdBQVcsR0FBRyxDQUFDO0lBQ3hCLGdCQUFLLEdBQVcsR0FBRyxDQUFDO0lBQ3BCLGlCQUFNLEdBQVcsR0FBRyxDQUFDO0lBQ3JCLHFCQUFVLEdBQVcsR0FBRyxDQUFDO0lBQ3pCLGNBQUcsR0FBVyxLQUFLLENBQUM7SUFDcEIsZUFBSSxHQUFXLEdBQUcsQ0FBQztJQUNuQixhQUFFLEdBQVcsSUFBSSxDQUFDO0lBQ2xCLGtCQUFPLEdBQVcsTUFBTSxDQUFDO0lBQ3pCLHFCQUFVLEdBQVcsV0FBVyxDQUFDO0lBQ2pDLG1CQUFRLEdBQVcsT0FBTyxDQUFDO0lBQzNCLGVBQUksR0FBUSxJQUFJLENBQUM7SUFFakIsNEJBQWlCLEdBQUcsa0JBQWtCLENBQUMsYUFBYSxDQUFDO0lBQ3JELDBCQUFlLEdBQUcsa0JBQWtCLENBQUMsZUFBZSxDQUFDO0lBQ3JELDhCQUFtQixHQUFHLGdCQUFnQixDQUFDOztJQUV2Qyw0QkFBaUIsR0FBRyxvQkFBb0IsQ0FBQyxlQUFlLENBQUM7SUFDekQsNEJBQWlCLEdBQUcsb0JBQW9CLENBQUMsZUFBZSxDQUFDO0lBQ3pELDZCQUFrQixHQUFHLG9CQUFvQixDQUFDLGtCQUFrQixDQUFDO0lBQzdELDZCQUFrQixHQUFHLG9CQUFvQixDQUFDLGtCQUFrQixDQUFDO0lBR3hGLGlCQUFDO0NBQUEsQUE1QkQsSUE0QkM7U0E1QlksVUFBVTs7O0lBRW5CLGlCQUEwQzs7SUFDMUMsc0JBQWdEOztJQUNoRCxvQkFBNkM7O0lBQzdDLGlCQUEyQzs7SUFDM0MscUJBQStDOztJQUMvQyxpQkFBMkM7O0lBQzNDLGtCQUE0Qzs7SUFDNUMsc0JBQWdEOztJQUNoRCxlQUEyQzs7SUFDM0MsZ0JBQTBDOztJQUMxQyxjQUF5Qzs7SUFDekMsbUJBQWdEOztJQUNoRCxzQkFBd0Q7O0lBQ3hELG9CQUFrRDs7SUFDbEQsZ0JBQXdDOztJQUV4Qyw2QkFBNEU7O0lBQzVFLDJCQUE0RTs7SUFDNUUsK0JBQThEOztJQUU5RCw2QkFBZ0Y7O0lBQ2hGLDZCQUFnRjs7SUFDaEYsOEJBQW9GOztJQUNwRiw4QkFBb0Y7OztBQUt4RixNQUFNLEtBQU8sY0FBYyxHQUFHLDhCQUE4Qjs7QUFDNUQsTUFBTSxLQUFPLFVBQVUsR0FBRyxlQUFlOztBQUN6QyxNQUFNLEtBQU8sY0FBYyxHQUFHLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSBtdmFzaW0gb24gMTIvOS8xNy5cbiAqL1xuXG5pbXBvcnQgeyBGbldlYXRoZXJDb25zdGF0bnQgfSBmcm9tICcuL2ZuLXdlYXRoZXIuY29uc3RhbnQnO1xuaW1wb3J0IHsgRm5EZXZpY2VDb25zdGFudCB9IGZyb20gJy4vZm4tZGV2aWNlLmNvbnN0YW50JztcbmltcG9ydCB7IEZuRGF0ZUZvcm1hdENvbnN0YW50IH0gZnJvbSAnLi9mbi1kYXRlLWZvcm1hdC5jb25zdGFudCc7XG5cblxuZXhwb3J0IGNsYXNzIEZOQ29uc3RhbnQge1xuXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBTUEFDRTogc3RyaW5nID0gJyc7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBTSU5HX1NQQUNFOiBzdHJpbmcgPSAnICc7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBFTVBUWVNUUjogc3RyaW5nID0gJyc7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBUSUxERTogc3RyaW5nID0gJ34nO1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgRldEX1NMQVNIOiBzdHJpbmcgPSAnLyc7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBDT01NQTogc3RyaW5nID0gJywnO1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgSFlQSEVOOiBzdHJpbmcgPSAnLSc7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBVTkRFUlNDT1JFOiBzdHJpbmcgPSAnXyc7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBET1Q6IHN0cmluZyA9ICdcXFxcLic7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBQRVJDOiBzdHJpbmcgPSAnJSc7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBOTzogc3RyaW5nID0gJ05PJztcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IE5VTExfTEM6IHN0cmluZyA9ICdudWxsJztcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IFVOX0RFRklORUQ6IHN0cmluZyA9ICd1bmRlZmluZWQnO1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgRkFMU0VfTEM6IHN0cmluZyA9ICdmYWxzZSc7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBOVUxMOiBhbnkgPSBudWxsO1xuXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBXRUFUSEVSX0lDT05fSEFTSCA9IEZuV2VhdGhlckNvbnN0YXRudC5XRUFUSEVSX0lDT05TO1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgV0VBVEhFUl9TVFJJTkdTID0gRm5XZWF0aGVyQ29uc3RhdG50LldFQVRIRVJfU1RSSU5HUztcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEZOREVWSUNFX0lDT05TX0hBU0ggPSBGbkRldmljZUNvbnN0YW50O1xuICAgIC8vIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgRk5JTkRFWF9DT05TVEFOVCA9IEZOSW5kZXhDb25zdGFudDtcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEZOREFURV9GT1JNQVRfTUFQID0gRm5EYXRlRm9ybWF0Q29uc3RhbnQuREFURV9GT1JNQVRfTUFQO1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgRk5USU1FX0ZPUk1BVF9NQVAgPSBGbkRhdGVGb3JtYXRDb25zdGFudC5USU1FX0ZPUk1BVF9NQVA7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBOR19EQVRFX0ZPUk1BVF9NQVAgPSBGbkRhdGVGb3JtYXRDb25zdGFudC5OR19EQVRFX0ZPUk1BVF9NQVA7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBOR19USU1FX0ZPUk1BVF9NQVAgPSBGbkRhdGVGb3JtYXRDb25zdGFudC5OR19USU1FX0ZPUk1BVF9NQVA7XG5cblxufVxuXG5leHBvcnQgY29uc3QgRlVMTF9OQU1FX1JFR1ggPSAvXig/OltBLVphLXpdKyg/Olxccyt8JCkpezEsfSQvO1xuZXhwb3J0IGNvbnN0IE5BTUVfUkVHRVggPSAvXltBLVphLXpcXHNdKiQvO1xuZXhwb3J0IGNvbnN0IENVUlJFTkNZX1JFR0VYID0gLyhcXGQpKD89KFxcZHszfSkrXFwuKS9nO1xuIl19