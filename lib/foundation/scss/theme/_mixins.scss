@mixin center-login {
  margin: 0 auto;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin shadow-inset($style, $x, $y, $blur, $color) {
  -webkit-box-shadow: $style $x $y $blur $color;
  -moz-box-shadow: $style $x $y $blur $color;
  box-shadow: $style $x $y $blur $color;
}
@mixin shadow($x, $y, $blur, $color) {
  -webkit-box-shadow: $x $y $blur $color;
  -moz-box-shadow: $x $y $blur $color;
  box-shadow: $x $y $blur $color;
}
@mixin shadow-reset {
  -webkit-box-shadow: none !important;
  -moz-box-shadow: none !important;
  box-shadow: none !important;
}
@mixin border($width, $style, $color) {
  border: $width $style $color;
}
@mixin border-direction($direction, $width, $style, $color) {
  border-#{$direction}: $width $style $color;
}
@mixin border-direction-reset($direction) {
  border-#{$direction}: none;
}
@mixin border-reset {
  border: none !important;
}
@mixin animate($property: all, $duration: 1s, $easing: ease) {
  -webkit-transition: $property $duration $easing;
  -moz-transition: $property $duration $easing;
  -o-transition: $property $duration $easing;
  transition: $property $duration $easing;
}

@mixin margin($value) {
  margin: $value;
}
@mixin margin-direction($direction, $value) {
  margin-#{$direction}: $value;
}
@mixin margin-reset {
  margin: 0 !important;
}
@mixin padding($value) {
  padding: $value;
}
@mixin padding-direction($direction, $value) {
  padding-#{$direction}: $value !important;
}
@mixin padding-reset {
  padding: 0 !important;
}
@mixin notice-box($color, $plain: false) {
  $background-color: lighten($color, 30%);
  $text-color: darken($color, 20%);
  $border-color: lighten($color, 30%);
  @include radius(5px);
  $fontweight: 400;
  @if $plain == true {
    $background-color: $color;
    $text-color: $white;
    $border-color: lighten($color, 30%);
    $outline: lighten($color, 30%);
    $fontweight: 200;
  }
  font-weight: $fontweight;
  margin-bottom: 12px;
  padding: 10px;
  background: $background-color;
  border-bottom: 1px solid $border-color;
  p {
    color: $text-color;
    text-shadow: none;
  }
}

@mixin box-sizing($val) {
  -webkit-box-sizing: $val;
  -moz-box-sizing: $val;
  box-sizing: $val;
}

@mixin user-select($val...) {
  -webkit-user-select: $val;
  -moz-user-select: $val;
  -ms-user-select: $val;
  user-select: $val;
}

@mixin box-shadow($shadows...) {
  -webkit-box-shadow: $shadows;
  box-shadow: $shadows;
}

@function inverse-side($side) {
  @if $side == top {
    @return bottom;
  } @else if $side == bottom {
    @return top;
  } @else if $side == left {
    @return right;
  } @else if $side == right {
    @return left;
  }
}

@mixin linear-gradient($gradientLine, $colorStops...) {
  background-image: -webkit-linear-gradient($gradientLine, $colorStops);
  background-image: -moz-linear-gradient($gradientLine, $colorStops);
  background-image: -o-linear-gradient($gradientLine, $colorStops);
  @if length($gradientLine) == 2 {
    background-image: linear-gradient(
      to #{inverse-side(nth($gradientLine, 1))} #{inverse-side(nth($gradientLine, 2))},
      $colorStops
    );
  } @else {
    background-image: linear-gradient(to #{inverse-side($gradientLine)}, $colorStops);
  }
}

@mixin radial-gradient($gradient...) {
  background-image: -webkit-radial-gradient($gradient);
  background-image: -moz-radial-gradient($gradient);
  background-image: -o-radial-gradient($gradient);
  background-image: radial-gradient($gradient);
}

@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

@mixin transition-property($properties...) {
  -webkit-transition-property: $properties;
  -moz-transition-property: $properties;
  -o-transition-property: $properties;
  transition-property: $properties;
}

@mixin transform($transform...) {
  -webkit-transform: $transform;
  -moz-transform: $transform;
  -ms-transform: $transform;
  -o-transform: $transform;
  transform: $transform;
}

@mixin clearfix {
  zoom: 1;

  &:before,
  &:after {
    content: "";
    display: table;
  }

  &:after {
    clear: both;
  }
}

@mixin inline-block {
  display: inline-block;
  vertical-align: baseline;
  zoom: 1;
  *display: inline;
  *vertical-align: auto;
}

@mixin hide-text() {
  font: 0/0 serif;
  text-shadow: none;
  color: transparent;
}

@mixin hidpi {
  @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 144dpi) {
    @content;
  }
}
@mixin radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}
@mixin outline-reset {
  outline: none;
}
@mixin outline($style, $color, $width) {
  outline-style: $style;
  outline-color: $color;
  outline-width: $width;
}
